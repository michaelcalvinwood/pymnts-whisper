require('dotenv').config();

const fs = require('fs');
const fsPromises = require('fs').promises;

const { Configuration, OpenAIApi } = require("openai");

const configuration = new Configuration({
    apiKey: process.env.PYMNTS_OPENAI_KEY,
  });
const openai = new OpenAIApi(configuration);

async function chatCompletion (prompt, service = 'You are a helpful, accurate assistant.') {
    /* 
     * NO NEED TO SPECIFY MAX TOKENS
     * role: assistant, system, user
     */



    const request = {
        url: 'https://api.openai.com/v1/chat/completions',
        method: 'post',
        headers: {
            'Authorization': `Bearer ${process.env.PYMNTS_OPENAI_KEY}`,
        },
        data: {
            model: "gpt-3.5-turbo",
            temperature: 0,
            messages:[
                {
                    role: 'system',
                    content: service,

                },
                {
                    role: 'user',
                    content: prompt
                }
            ]
        }
    }

    return console.log(request);

    let response;

    try {
        response = await axios(request);
        console.log(response.data.choices[0].message);
    } catch (e) {
        console.error(e.response.data);
    }

    return response.data;
}


exports.transcribeAudio = async (inputFileName, outputFileName) => {
    const transcript = await openai.createTranscription(
      fs.createReadStream(inputFileName),
      "whisper-1"
    );

    await fsPromises.writeFile(outputFileName, transcript.data.text);
    return;
}

exports.cleanUpTranscript = async (transcript) => {
    const prompt = `The transcript below was generated by ai. Correct the transcript as follows. Remove instances where people stutter. Rewrite numbers and numeric references in human friendly format.

    Transcript:
    ${transcript}\n`;


}